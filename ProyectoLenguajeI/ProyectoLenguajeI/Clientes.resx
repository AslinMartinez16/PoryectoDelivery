<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>